{"version":3,"sources":["components/Header/Header.js","components/Projects/ProjectItem.js","api.js","components/Projects/ProjectList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Box","AppBar","position","sx","bgcolor","borderBottom","Toolbar","Typography","fontSize","fontWeight","color","MyPaper","styled","Paper","backgroundColor","elevation4","cursor","ProjectItem","project","Grid","item","lg","component","container","alignItems","margin","padding","xs","name","description","getRepositories","Octokit","request","then","response","new_data","i","data","length","console","log","includes","push","ProjectList","useState","projects","setProjects","loading","setLoading","error","setError","useEffect","a","fetchMyRepos","justifyContent","e","map","App","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e665f92.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport function Header() {\n    return (\n        <Box>\n            <AppBar position=\"fixed\" sx={{ bgcolor: 'rgb(13, 25, 40)', borderBottom: 'solid 1px rgb(24, 47, 75)' }}>\n                <Toolbar>\n                    <Typography sx={{ fontSize: 'h5.fontSize', fontWeight: '600', color: 'rgb(243, 246, 249)' }}>\n                        helloybz.\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}","import { Grid, Paper, Typography } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\n\nconst MyPaper = styled(Paper)(() => ({\n    backgroundColor: 'rgb(5,30,59)',\n    elevation4: true,\n    color: 'whitesmoke',\n    \":hover\": {\n        backgroundColor: 'rgb(8,33,62)',\n        cursor: \"pointer\",\n    }\n}));\n\nexport function ProjectItem({ project }) {\n\n\n    return (\n        <Grid\n            item lg={6}\n            component={MyPaper}\n            container\n            alignItems='flex-start'\n            sx={{\n                margin: \"1rem\", padding: \"1rem\",\n            }}\n        >\n            <Grid item xs={12} component={Typography} sx={{ fontSize: 'h4.fontSize' }} >\n                {project.name}\n            </Grid>\n            <Grid item xs={12} component={Typography} sx={{ fontSize: 'body1.fontSize' }}>\n                {project.description}\n            </Grid>\n        </Grid >\n    )\n}","import { Octokit } from '@octokit/core'\n\nfunction getRESTClient() {\n    return new Octokit()\n}\n\nexport function getRepositories() {\n    const octokit = getRESTClient()\n    return octokit.request(\n        'GET /users/{username}/repos',\n        {\n            \"username\": \"helloybz\",\n            \"type\": \"public\"\n        }\n    ).then((response) => {\n        var new_data = []\n        for (let i = 0; i < response.data.length; i++) {\n            console.log(i, response.data[i].name)\n            if (['CLANE', 'Deepwalk-Clone'].includes(response.data[i].name)) {\n                new_data.push({ ...response.data[i] });\n            }\n        }\n        console.log(new_data[0])\n        return new_data\n    })\n}","import { useState, useEffect } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nimport { ProjectItem } from \"./ProjectItem\";\n\nimport { getRepositories } from \"../../api\";\n\nexport function ProjectList() {\n    const [projects, setProjects] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        async function fetchMyRepos() {\n            try {\n                setLoading(null);\n                setError(null);\n                setLoading(true);\n                const response = await getRepositories()\n                setProjects(response)\n            } catch (e) {\n                setError(e);\n            }\n            setLoading(false);\n        };\n\n        fetchMyRepos();\n    }, [])\n\n    if (loading) {\n        return (\n            <Box>\n                <Grid container justifyContent=\"center\" alignItems='center'>\n                    Loading\n                </Grid>\n            </Box>\n        )\n    }\n    if (error) {\n        return (\n            <Box>\n                <Grid container justifyContent=\"center\" alignItems='center'>\n                    {error.e}\n                </Grid>\n            </Box>\n        )\n    }\n    if (!projects) {\n        return (\n            <Box>\n                <Grid container justifyContent=\"center\" alignItems='center'>\n                    No projects\n                </Grid>\n            </Box>\n        )\n    }\n\n    return (\n        <Box>\n            <Grid container justifyContent=\"center\" alignItems='center'>\n                {projects.map((project, i) => (\n                    <ProjectItem key={i} project={project} />\n                ))\n                }\n            </Grid>\n        </Box>\n    )\n}","import { Box } from \"@mui/system\";\nimport { Header, ProjectList } from \"./components\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Box sx={{ marginTop: \"6rem\" }}>\n        <ProjectList />\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}